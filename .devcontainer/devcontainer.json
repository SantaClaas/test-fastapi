// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/python-3
{
  "name": "Python 3",
  "forwardPorts": [8000],
  "build": {
    "dockerfile": "Dockerfile",
    "context": "..",
    "args": {
      // Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
      // Append -bullseye or -buster to pin to an OS version.
      // Use -bullseye variants on local on arm64/Apple Silicon.
      "VARIANT": "3.10-bullseye",
      // Options
      "NODE_VERSION": "*"
    }
  },

  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        // "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python3",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        // "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
        // "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
        // "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
        // "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
        // "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
        // "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
        // "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
        // "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
        // "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
        "python.linting.pylintPath": "${workspaceFolder}/.venv/bin/pylint",
        "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
        "python.formatting.blackPath": "${workspaceFolder}/.venv/bin/black",
        "python.formatting.yapfPath": "${workspaceFolder}/.venv/bin/yapf",
        "python.linting.banditPath": "${workspaceFolder}/.venv/bin/bandit",
        "python.linting.flake8Path": "${workspaceFolder}/.venv/bin/flake8",
        "python.linting.mypyPath": "${workspaceFolder}/.venv/bin/mypy",
        "python.linting.pycodestylePath": "${workspaceFolder}/.venv/bin/pycodestyle",
        "python.linting.pydocstylePath": "${workspaceFolder}/.venv/bin/pydocstyle",
        "python.poetryPath": "/usr/local/bin/poetry"
      },

			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"bradlc.vscode-tailwindcss",
				"ms-azuretools.vscode-docker",
				"wholroyd.jinja",
				"github.vscode-github-actions",
				"bungcip.better-toml"
			]
		}
	},

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "pip3 install --user -r requirements.txt",
  "postCreateCommand": "poetry install",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",
  "features": {
    // Doing this in Dockerfile already
    // "ghcr.io/devcontainers/features/node:1": {}
  }
}
